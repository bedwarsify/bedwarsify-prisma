datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String    @id @default(uuid())
  minecraftId     String?   @unique
  discordId       String?   @unique
  sessions        Session[]
  reporterReports Report[]  @relation("Reporter")
  reporteeReports Report[]  @relation("Reportee")
  role            UserRole  @default(NONE)
  customTagText   String?
  customTagColor  Int?
  canReport       Boolean   @default(true)
  createdAt       DateTime  @default(now())
}

enum UserRole {
  NONE
  NITRO_BOOSTER
  PARTNER
  HELPER
  COMMUNITY_MANAGER
  DEVELOPER
}

model Session {
  id        String      @id @default(uuid())
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  secret    String
  type      SessionType
  createdAt DateTime    @default(now())
}

enum SessionType {
  OVERLAY
}

model Report {
  id         String       @id @default(uuid())
  reporter   User         @relation("Reporter", fields: [reporterId], references: [id])
  reporterId String
  reportee   User         @relation("Reportee", fields: [reporteeId], references: [id])
  reporteeId String
  reason     ReportReason
  weight     Int
  createdAt  DateTime     @default(now())

  @@unique([reporterId, reporteeId])
}

enum ReportReason {
  HACKER
  SNIPER
}

model DiscordGuild {
  id           String  @id
  linkedRoleId String?

  levelRoles DiscordLevelRole[]
}

model DiscordLevelRole {
  id      String @id
  level   Int
  guildId String

  guild DiscordGuild @relation(fields: [guildId], references: [id])

  @@unique([level, guildId])
}
